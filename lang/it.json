{
    "About": "Chi sono",
    "Resume": "Curriculum",
    "Services": "Servizi",
    "Contact": "Contatti",
    "Summary": "Riepilogo",
    "Education": "Formazione",
    "Resume.Today": "ad Oggi",
    "Currently working as": "Attualmente impiegato come",
    "Currently in Italy": "Attualmente in Italia",
    "at": "presso",
    "Summary.Description":"Con un'esperienza decennale nello sviluppo software e nel mondo dell'informatica, ho potuto toccare, ogni angolo di questo mondo, a partire dallo sviluppo di siti web, alle applicazioni mobile, alla creazione di piccoli sistemi embedded.",
    "About.Description": "Laureato a pieni voti in Informatica presso l'Università degli Studi di Milano. Ho lavorato per anni, durante gli studi scolastici e accademici, come freelancer per conto di aziende e privati. Allo stesso tempo ho avuto modo di sperimentare nel tempo libero nuove tecnologie, spaziando fra i vari ambiti del settore da web app a sistemi embedded. Attualmente ricopro la posizione di technical lead presso Zerouno SRL, dove mantenendomi costantemente aggiornato giorno per giorno, seguo un team di sviluppatori nella loro crescita professionale e mi preoccupo di implementare soluzioni architetturali che aumentino la produttività e l'efficienza aziendale. Lateralmente come hobby, mi affascina seguire i mercati finanziari, in particolare il settore tecnologico, cercando sempre di più di capire quali siano i fattori che li smuovono e come analizzarli. Sin da piccolo sono sempre stato curioso, competitivo e affamato sia in ambito sportivo che personale, non mi sono mai accontentato dei traguardi raggiunti ed è probabilmente anche per queste caratteristiche che, solo citando l'ambito professionale, ho raggiunto posizioni aziendali rilevanti alla sola età di 23 anni e portato a termine decine di progetti.",
    "Resume.ML":"A seguito del primo corso introduttivo sul machine learning, attualmente sto seguendo un secondo corso Google sull'intelligenza artificiale generativa.",
    "Resume.Degree":"Laurea in Informatica",
    "University of Milan":"Università degli Studi di Milano",
    "Resume.Degree.Description":"Dopo aver ricevuto una borsa di studio per i risultati raggiunti durante il I anno accademico (2018-2019), ho conseguito, nel 2021, una Laurea a pieni voti in Informatica presso l'Università degli Studi di Milano Statale.",
    "Professional Experience": "Esperienza Professionale",
    "Resume.Freelancer":"Libero professionista",
    "Resume.Zerouno": "Tech Lead principalmente occupato nell'insegnamento del giusto approccio alla scrittura del codice e al problem solving nei confronti degli sviluppatori junior e al mantenimento e al miglioramento del prodotto principale di Zerouno denominato JPuzzle. Eliminando sovraingegnerizzazioni che rallentavano la scrittura e la distribuzione del software. Tra i vari miglioramenti mi sono occupato di migrare l'intero repository monolitico a un monorepo package-based gestito con tecnologie come Lerna e Nx. Ho introdotto il controllo delle versioni, i commit convenzionali, TypeDoc, pipeline di CI Gitlab e molte altre cose.",
    "Professor": "Professore di Informatica",
    "Computer Consultant": "Consulente Informatico",
    "Resume.StreetGorilla": "Nel mio ruolo, sono stato profondamente coinvolto nell'analisi, sviluppo e manutenzione del sito web, assicurandomi che fosse non solo funzionale ma anche aggiornato e facile da usare. Questo lavoro si estende alla piattaforma e-commerce, dove sforzi simili sono applicati per fornire un'esperienza di acquisto online fluida ai loro clienti. Inoltre, ho intrapreso lo sviluppo di software gestionale personalizzato, su misura per soddisfare le esigenze uniche delle loro operazioni aziendali. Una parte significativa delle mie responsabilità ha incluso la digitalizzazione dei processi aziendali, trasformando i processi tradizionali e manuali in processi digitali ed efficienti. Inoltre, ho fornito supporto tecnico continuativo, assicurando un'operatività aziendale continua e affrontando qualsiasi problema tecnico in modo tempestivo ed efficace.",
    "Project based contract": "Contratto a progetto",
    "Resume.Radicis":"Aggiunta e modifica di funzionalità a piattaforma di e-commerce (Magento).",
    "Web developer": "Sviluppatore web",
    "Resume.Encodata":"Sviluppo di una piattaforma per la gestione dell'assistenza e il supporto clienti. Comprensivo di analisi delle esigenze del cliente e successiva installazione finale del prodotto.",
    "The beginning": "L'inizio",
    "Resume.Beginning": "Digitando sulla tastiera sin da quando ero bambino, ho scritto le mie prime righe di codice per lo sviluppo di un videogioco online in 3° media. Nello stesso periodo, all'età di 14 anni, ho realizzato un social network come mio primo progetto personale, funzionante ma mai realmente portato online. Ho avuto poi la possibilità di sviluppare, solo un anno dopo, un applicativo in solitaria presso Encodata S.p.A. distribuito e ancora oggi utilizzato.",
    "Portfolio.Description":"Solo alcuni dei lavori svolti negli ultimi anni.",
    "Embedded Systems": "Sistemi Embedded",
    "Other": "Altro",
    "Projects":"Progetti",
    "Websites": "Sviluppo web",
    "Services.Websites.Description":"Hai bisogno di creare il tuo sito web intuitivo e professionale per te o per la tua azienda?",
    "Contact me": "Contattami",
    "Services.Development":"Sviluppo software ad hoc",
    "Services.Development.Description":"Hai un'idea innovativa o necessità particolari da sviluppare?",
    "Automation": "Automazione",
    "Services.Digitalization.Description":"Hai un lavoro meccanico da ripetere periodicamente? Copiare, modificare e incollare i dati da una parte all'altra può farlo una macchina, risparmia il tuo tempo prezioso.",
    "Consultancy": "Consulenza",
    "Services.Consultancy.Description":"Sei un'azienda e hai bisogno di un opinione professionale o di un'analisi?",
    "Private Lessons": "Lezioni private",
    "Services.Lessons.Description":"Devi preparare un esame o semplicemente vuoi saperne di più sul mondo dell'informatica?",
    "Products and Applications":"Prodotti e Applicazioni",
    "Services.Products.Description":"Hai bisogno di gestire vendite, acquisti, magazzino, fatturazione, spese, eventi, progetti, punti vendita, contratti, ferie, e-learning e/o molto altro? Scopri i prodotti già pensati e sviluppati per renderti più produttivo.",
    "Location": "Luogo",
    "Name": "Nome",
    "Email": "Email",
    "Message": "Messaggio",
    "Subject": "Oggetto",
    "Send": "Invia messaggio",
    "Sent Successfully": "Il tuo messaggio è stato inviato. Grazie!",
    "Contact.Error": "Si è verificato un errore durante l'invio del messaggio. Riprova più tardi.",
    "Info": "Informazioni",
    "Portfolio.Location":"Presso",
    "Portfolio.Date":"Data",
    "Portfolio.Presentation": "Presentazione",
    "Interview": "Intervista",
    "Show": "Visuallizza",
    "ClearTheSmartCity.Description": "Ho sviluppato un progetto innovativo di \"cestino intelligente\" che si interfaccia con un database per monitorare i livelli di rifiuti, le programmazioni di svuotamento e altri dati per una gestione efficiente dei rifiuti. Il sistema include un'app web e mobile facile da usare per il monitoraggio in tempo reale della capacità dei bidoni, ottimizzando i programmi di raccolta dei rifiuti e riducendo il consumo di carburante. Le caratteristiche includono sensori di livello di riempimento, un meccanismo di compattazione dei rifiuti, tracciamento GPS e una scheda GPRS/GSM per la trasmissione dei dati, tutto progettato tenendo in mente la sicurezza dell'utente e il risparmio dei costi, con costi hardware inferiori a 90 €.",
    "DermatologaVenezia.Description":"Un sito elegante e facile da usare per la Dott.ssa Rossana Capezzera, che mostra i servizi dermatologici che effettua e gli ambulatori in cui opera. I contenuti sono facilmente e autonomamente gestiti da parte del proprietario tramite un CMS. Il sito web risulta quindi accessibile e navigabile in modo efficiente con particolare attenzione al coinvolgimento del cliente e del paziente.",
    "GorillaEars.Description":"L'idea centrale era quella di creare un accessorio funzionale ma discreto che potesse essere montato all'altezza delle orecchie su un casco. I pezzi sono stati modellati in Blender, adattandosi perfettamente ai lacci del casco, garantendo una vestibilità sicura. La funzione principale di questi attacchi era quella di fornire punti di ancoraggio per una maschera COVID-19, consentendo così agli utenti di indossarla comodamente senza dover scoprire le orecchie o regolare la vestibilità del casco.",
    "Specification": "Specifica",
    "Report":"Relazione",
    "Logisim Circuit": "Circuito Logisim",
    "MIPS.Description":"Il progetto consiste nella realizzazione di un’architettura RISC a 32bit, prendendo spunto dall’architettura MIPS, con ISA ridotto e un’ALU ad elaborazione di numeri interi. Le istruzioni vengono inserite nell’Istruction Register tramite l’editor di logisim. Una volta attivato il clock, le istruzioni vengono eseguite in cascata fino all’ultima disponibile nell’IR. Al fine di dimostrare il funzionamento viene caricato un programma che inserisce 6 elementi in memoria centrale, da 4 byte ciascuno sotto forma di array, un elemento k nel registro $a1, scansiona l’array e inserisce nel registro $v0: 1 se è stato trovato l’elemento k, 0 altrimenti.",
    "StreetGorilla.Description":"Una soluzione web dinamica che combina una robusta piattaforma e-commerce Prestashop con, a quel tempo, un'applicazione innovativa per la gestione del coaching (usando Laravel + Voyager). Questo progetto include anche un'app cliente multipiattaforma (sviluppata con Ionic), la digitalizzazione dei processi aziendali inclusa un'estensione Chrome personalizzata per semplificare le operazioni di e-commerce, e supporto tecnico dedicato, racchiudendo un ampio spettro di servizi digitali di commercio e coaching. Gran parte del sito relativo all'attività di palestra è personalizzabile dai proprietari tramite un CMS.",

    "Back to projects": "Torna ai progetti",
    "weeks":"settimane",

    "Coreve.ProjectTitle": "Progetto Digitalizzazione Bandi per CoReVe",
    "Coreve.ProjectDetails": "Dettagli del Progetto",
    "Coreve.Date": "Data",
    "Coreve.ProjectDuration": "Durata del Progetto",
    "Coreve.TechnologiesUsed": "Tecnologie Utilizzate",
    "Coreve.Team": "Team",
    "Coreve.MyRole": "Mio Ruolo",
    "Coreve.ProjectDescription": "Descrizione del Progetto",
    "Coreve.ProjectDescriptionText": "In questo progetto innovativo, il nostro obiettivo era trasformare i processi tradizionalmente cartacei di CoReVe in un sistema digitale efficiente e intuitivo che semplificasse la procedura di iscrizione ai bandi pubblicati da quest'ultima. Siamo stati incaricati di sviluppare un sistema per la creazione di bandi digitali, destinato a comuni, enti e società. La sfida principale era digitalizzare i moduli cartacei esistenti in form dinamiche, semplificando il processo di compilazione e riducendo significativamente gli errori formali attraverso funzioni di validazione automatica.",
    "Coreve.FeaturesAndResults": "Caratteristiche e risultati",
    "Coreve.Digitalization": "Digitalizzazione",
    "Coreve.DigitalizationText": "Creazione di form dinamiche che guidano l'utente in un processo di compilazione intuitivo e intelligente, minimizzando errori grazie alla validazione automatica del sistema.",
    "Coreve.SecurityAndLegality": "Sicurezza e Legalità",
    "Coreve.SecurityAndLegalityText": "Implementazione di un sistema per la generazione di documenti PDF al termine della procedura di compilazione, che possono essere firmati digitalmente o stampati per una firma manuale, garantendo la validità legale delle sottomissioni.",
    "Coreve.TechnologicalInnovation": "Innovazione Tecnologica",
    "Coreve.TechnologicalInnovationText": "Utilizzo di tecnologie avanzate come NodeJS con Strapi per il backend, e Angular con PrimeNG per un frontend personalizzato, oltre all'implementazione di OIDC Authentication con Keycloak.",
    "Coreve.MyContribution": "Il mio Contributo",
    "Coreve.MyContributionText": "Come parte integrante del team, il mio ruolo si è concentrato sulla stesura dell'architettura di base e sulla revisione del codice. Ho rapidamente acquisito competenze sui nuovi framework utilizzati, fornendo una guida tecnica essenziale al team e garantendo l'adempimento degli obiettivi di progetto in tempi ristretti. In aggiunta, dato il mio ruolo aziendale, ho supportato altri sviluppatori e partecipato a riunioni per progetti paralleli, dimostrando versatilità e competenza multi-progetto.",
    "Coreve.PriorityManagement": "Gestione delle Priorità e Ottimizzazione dei Tempi",
    "Coreve.PriorityManagementText": "Un aspetto cruciale di questo progetto è stata la gestione efficace delle tempistiche. Dato che il bando era un documento ufficiale legalmente vincolante, con una data e ora di pubblicazione fissate, abbiamo dovuto adottare un approccio strategico nella gestione delle attività. Per ottimizzare i tempi, abbiamo deciso di posticipare tutte le operazioni di backoffice che non erano immediatamente necessarie per la pubblicazione del bando. Questo ci ha permesso di concentrarci sulla priorità assoluta: lo sviluppo della parte di frontoffice accessibile da comuni, enti e società. Questa decisione ha garantito che potessimo rispettare la scadenza stringente senza compromettere la qualità e la funzionalità del sistema, dimostrando la nostra capacità di adattarci efficacemente alle esigenze del cliente e alle restrizioni temporali.",
    "Coreve.TechMentor": "Mentore Tecnico",

    "jPuzzle.ProjectTitle": "Rifattorizzazione e Ottimizzazione di jPuzzle",
    "jPuzzle.Introduction": "Introduzione",
    "jPuzzle.IntroductionText": "Al mio ingresso in Zerouno, mi sono imbattuto nel loro prodotto di punta jPuzzle: un sistema ERP estremamente modulabile ma che celava diverse lacune tecniche dietro a un frontend vecchio stile ma funzionale e preciso al pixel.",
    "jPuzzle.InitialChallenge": "Sfida Iniziale",
    "jPuzzle.InitialChallengeText": "La mia prima esperienza pratica con il sistema mi ha immediatamente messo di fronte a una sfida: tempi di compilazione eccessivamente lunghi. Un semplice comando 'ng serve' richiedeva oltre cinque minuti per compilare l'applicazione, un ritardo notevole che portava ciascun sviluppatore a perdere un enorme quantità di tempo per ogni piccola modifica da apportare.",
    "jPuzzle.StrategiesAndSolutions": "Strategie e Soluzioni",
    "jPuzzle.TechnicalNote": "Nota tecnica",
    "jPuzzle.TechnicalNoteContent": "Se sei un tecnico e vuoi leggere un blog a riguardo, puoi trovarlo qui:",
    "jPuzzle.StrategiesList": "Ho iniziato a esplorare modi per ridurre i tempi di compilazione, concentrandomi su diverse configurazioni e ottimizzazioni. Questo processo ha incluso:",
    "jPuzzle.RemovalOfUnnecessarySteps": "Rimozione dei Passaggi Non Necessari in Modalità Sviluppo",
    "jPuzzle.TsconfigReview": "Revisione del File di Configurazione (tsconfig.json)",
    "jPuzzle.PackagingWithNx": "Pacchettizzazione e Uso di Nx",
    "jPuzzle.ApplicationOfKISS": "Applicazione del Principio KISS (Keep It Simple, Stupid)",
    "jPuzzle.Results": "Risultati",
    "jPuzzle.ResultsText": "Grazie a queste strategie, sono riuscito a ridurre il tempo di compilazione da cinque minuti a pochi secondi, migliorando notevolmente l'efficienza e la collaborazione nello sviluppo. Questo progetto ha dimostrato l'importanza di un approccio flessibile e di un pensiero critico nella risoluzione dei problemi tecnici.",
    "jPuzzle.RemovalOfUnnecessaryStepsDescription": "Esaminando la configurazione del compilatore Angular, ho identificato e disabilitato alcune opzioni che rallentavano la compilazione, come l'ottimizzazione e la generazione di un unico bundle.",
    "jPuzzle.TsconfigReviewDescription": "Ho analizzato e ottimizzato il file di configurazione TypeScript per garantire che solo i file necessari fossero inclusi nella compilazione.",
    "jPuzzle.PackagingWithNxDescription": "Affrontando la complessità di un'applicazione monolitica di grande dimensione, ho adottato l'approccio di suddividerla in pacchetti npm più piccoli e gestibili, utilizzando Nx per una gestione efficiente. Questo ha permesso una compilazione incrementale e parallela, riducendo drasticamente i tempi di compilazione.",
    "jPuzzle.ApplicationOfKISSDescription": "Un'importante lezione appresa è stata la semplificazione del codice. Eliminando l'overengineering e riducendo la quantità di codice, sono stato in grado di mantenere il 100% delle funzionalità eliminando gran parte del codice legacy presente (seguendo il buon vecchio principio di Pareto).",


    "ZerounoOptimization.Title": "Ottimizzazione del Frontend in Zerouno",
    "ZerounoOptimization.Introduction": "Introduzione",
    "ZerounoOptimization.IntroText": "Quando sono arrivato in Zerouno, vidi l'enorme effort fatto per avere un frontend che, nonostante fosse molto old-style, era estremamente modulabile, componibile e allo stesso tempo rigido nelle personalizzazioni grafiche che dovevano rientrare in certi standard di usabilità e coerenza aziendali. Rimasi felicemente shockato nel vedere che a prima vista navigandoci non trovai nemmeno un pixel fuori posto, tra me e me mi sembrò di essere capitato in qualcosa da cui potevo imparare tanto (spoiler: così fu, ma nell'\"hard way\")... ricordo perfettamente che dopo averlo visto e provato in prima persona, compilai per la prima volta un'applicazione frontend.",
    "ZerounoOptimization.CompilationTimeDiscussion": "\"Sarà solo la prima compilazione, vediamo come si comporta con le build incrementali\", aggiungiamo un console.log da qualche parte e salviamo, vediamo cosa succede con il live reloading.. ancora minuti di compilazione.. shockato mi girai verso il primo collega nei dintorni:",
    "ZerounoOptimization.Dialogue1": "\"ma è normale che a ogni ';' che aggiungo impiega minuti per compilare?\"",
    "ZerounoOptimization.Dialogue2": "\"sìsì, è un po' lento\"",
    "ZerounoOptimization.StudyOnCompilation": "Da qui iniziò il mio studio sul trovare incrementalmente modi per ridurre i tempi di compilazione. SPOILER: non esiste nessuna magia o flag magico, la verità sta nelle ultime due sezioni.",
    "ZerounoOptimization.ArticleNote": "Nota: Questo articolo è stato scritto a distanza di più di un anno dall'inizio di questa trasformazione, per questo motivo potrebbe contenere delle imprecisioni storiche / tecniche e non contiene dei report statistici sulle operazioni descritte di seguito ma ha come obiettivo dare una panoramica dei ragionamenti e del percorso fatto che hanno portato a trasformare un applicativo estremamente difficile da manutenere e inutilmente grosso in termini di quantità di file e dimensioni in uno con lo stesso set di funzionalità ma ottimizzato sotto diversi punti.",
    "ZerounoOptimization.RemovalOfUnnecessarySteps": "Rimozione dei Passaggi Non Necessari nella Compilazione in Modalità Sviluppo",
    "ZerounoOptimization.RemovalDescription": "Iniziando dai modi che impiegavano meno effort per velocizzare il processo di compilazione ho pensato di vedere cosa il compilatore offriva in termini di configurazione per migliorare la situazione...",
    "ZerounoOptimization.AotDescription": "aot: Usate AOT finché potete; rispetto agli altri flag citati successivamente è l'unico che vi consiglio di tenere abilitato (true)...",
    "ZerounoOptimization.OptimizationDescription": "optimization: Inserisce degli step di minificazione degli scripts e dei fogli di stile...",
    "ZerounoOptimization.BuildOptimizerDescription": "buildOptimizer: La documentazione di angular non ci da troppe informazioni su cosa questo flag fa...",
    "ZerounoOptimization.VendorChunkDescription": "vendorChunk: Genera un bundle separato contenente solo i moduli di terze parti...",
    "ZerounoOptimization.CompilationMisconception": "Nonostante queste belle e interessanti accortezze, per esperienza, NON sono queste le cause di una compilazione lenta di un'applicazione angular. Il compilatore di angular è in realtà molto rapido e il set up di base fornito dal file di configurazione autogenerato lanciando 'ng new app' è più che sufficiente. 9 su 10 il problema ricade su altri problemi architetturali o di configurazione.",
    "ZerounoOptimization.TsconfigAndAngularJson": "tsconfig.json e Conflitti Esistenziali con angular.json",
    "ZerounoOptimization.TsconfigExplanation": "Finché arrivate da un progetto pulito angular generato con 'ng new ...' potete stare abbastanza certi che il file tsconfig.json che vi trovate sia ok per le vostre esigenze. Ma se come me venite lanciati su un progetto già esistente di migliaia di file, dare una controllatina non è una brutta idea.",
    "ZerounoOptimization.IncrementalFlag": "incremental: in typescript impostando questo flag a true si ottengono delle build incrementali che velocizzano le build successive alla prima sia per quanto riguarda il live reloading che per quanto riguarda le partenze 'a freddo'. Angular sembra ignorare questo flag e per quanto riguarda il live reloading ci pensa già il compilatore di angular a cercare di ricompilare solo la parte di codice modificata (più le sue dipendenze), ma ciò non avviene per le partenze a freddo from disk.",
    "ZerounoOptimization.FilesIncludeExclude": "files, include, exclude: Controllare accuratamente quali file vengono inclusi o esclusi dalla compilazione può avere un impatto significativo sul tempo di compilazione. Forse avere { 'include': ['**/*.ts'] } non è una grande idea. In particolare in un'applicazione angular standard non dovrebbe servirvi specificare quali file compilare all'interno del tsconfig.json, quanto più specificare l'entrypoint nella proprietà projects.&lt;nomeprogetto&gt;.architect.build.options.main",
    "ZerounoOptimization.Packaging": "Pacchettizzazione",
    "ZerounoOptimization.PackagingDescription": "Arriviamo ad uno dei punti salienti del percorso per cui bisogna sporcarsi un po' le mani: pacchettizzare. Uno dei più grandi ostacoli che gli sviluppatori incontrano nel lavorare con un'applicazione monolitica, soprattutto se l'applicazione cresce fino a raggiungere la dimensione di più di 8000 file con centinaia di righe di codice Typescript, è la lentezza del processo di compilazione.",
    "ZerounoOptimization.NxToTheRescue": "Nx in Soccorso",
    "ZerounoOptimization.NxDescription": "Brevemente, Nx è uno strumento estremamente potente che, tra le altre cose, consente agli sviluppatori di organizzare il codice in un monorepo, ma con la possibilità di suddividerlo logicamente in librerie condivise. Queste librerie possono essere gestite come pacchetti npm separati, consentendo una gestione del codice più granulare.",
    "ZerounoOptimization.NxLink": "https://nx.dev/getting-started/why-nx",
    "ZerounoOptimization.HowToTransform": "Venendo al Dunque: Come Trasformo un Sorgente Monolitico in Pacchetti?",
    "ZerounoOptimization.TransformDescription": "Procedendo per step ho iniziato identificando le parti del codice che possono essere separate logicamente. Per mia fortuna il sorgente era già abbastanza ben suddiviso in cartelle con il loro scope (ui, renderers, i18n, utils ecc.), il problema è stato poi riuscire a eliminare un intricato 'labirinto' di dipendenze l'una con l'altra (but this is another story). Utilizzando Nx, ho creato pacchetti npm per ogni libreria. Ogni pacchetto ha il proprio set di dipendenze e può essere compilato separatamente. A questo punto per ogni pacchetto creato eliminavo il rispettivo codice nel repository in cui le applicazioni erano presenti insieme alle rimanenti librerie ancora collegate in modo monolitico e patchavo qua e là alcune rimanenze per far funzionare il tutto.",
    "ZerounoOptimization.HowItWorks": "Bello... Ma Realmente... Come Funziona?",
    "ZerounoOptimization.HowItWorksDescription": "La magia della pacchettizzazione si trova nella compilazione incrementale. Attraverso un sistema di cache intelligente che memorizza i risultati della compilazione, invece di ricompilare l'intero monolite ogni volta che si apporta una modifica, Nx consente la compilazione solo dei pacchetti che sono stati effettivamente modificati o delle parti che dipendono da essi. Se una libreria non è stata modificata, Nx utilizza semplicemente la versione in cache. Inoltre, dato dal fatto che abbiamo un albero di dipendenze ben definito, Nx consente anche la compilazione parallela dei pacchetti. Questo significa che, ove possibile, più librerie possono essere compilate contemporaneamente.",
    "ZerounoOptimization.KISSPattern": "Generalizzazione e Tanti Baci (KISS Pattern)",
    "ZerounoOptimization.KISSDescription": "Il segreto e mantra che mi piace dire di aver portato all'interno di zerouno è 'Semplifica ed elimina'. La verità e la vera differenza nei tempi di compilazione, di manutenibilità ecc. ecc. sta nel semplificare estremamente una struttura overingegnerizzata del sorgente, eliminando decine e decine di file e migliaia di righe di codice. Ovviamente non va fatto a caso ma vanno ragionati tutti gli eventuali breaking changes che si portano, livelli di astrazioni che si vogliono mantenere e tutto ciò, se sei (s)fortunato come me, senza alcuna riga di test per avere un riscontro che quello che si sta facendo non rompa logiche sparse per l'applicazione.",
    "ZerounoOptimization.ParetoPrinciple": "Quindi, dopo aver eliminato qua e là, aver effettuato refactor su refactor di metodi, classi ecc., avere un'idea quasi perfetta di tutti gli ingranaggi che muovono l'applicazione e con la benedizione del capo puoi procedere a raccogliere un'idea di come applicare il principio di pareto al proprio contesto applicativo cercando di ottenere l'80% delle funzionalità esistenti con il 20% dell'effort.",
    "ZerounoOptimization.CommentsWelcome": "Commenti sono ben accetti:"

}
